import{N as C,Y as m,V as T}from"./entry.adf6f5f7.js";import{u as x,a as G}from"./auth.cb4bed8f.js";const v=()=>{function t(n){return n.replace(/\x1B\[33m(.*?)\x1B\[0m/g,'<span class="log-number">$1</span>').replace(/\x1B\[1m\x1B\[35m(.*?)\x1B\[0m\x1B\[22m/g,'<span class="log-addr">$1</span>').replace(/\x1B\[94m(.*?)\x1B\[0m/g,'<span class="log-cmd">$1</span>').replace(/\x1B\[90m(.*?)\x1B\[0m/g,'<span class="log-debug">$1</span>').replace(/(\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.[\d]+\])/g,'<span class="log-time">$1</span>').replace(/\[ INFO\]/g,'<span class="log-info">[ INFO]</span>').replace(/\[ WARN\]/g,'<span class="log-warning">[ WARN]</span>').replace(/\[ERROR\]/g,'<span class="log-error">[ERROR]</span>').replace(/\[DEBUG\]/g,'<span class="log-debug">[DEBUG]</span>').replace(/\[Decoder\]/g,'<span class="log-decoder">[Decoder]</span>').replace(/\[Encoder\]/g,'<span class="log-encoder">[Encoder]</span>').replace(/\[Server\]/g,'<span class="log-server">[Server]</span>').replace(/\[Validator\]/g,'<span class="log-server">[Validator]</span>')}function e(n){const i=n.split(":");return parseInt(i[0])*3600+parseInt(i[1])*60+parseInt(i[2])}function s(n){let i=Math.floor(n/3600);n%=3600;let f=Math.floor(n/60),d=Math.round(n%60);const g=String(f).padStart(2,"0"),w=String(i).padStart(2,"0"),S=String(d).padStart(2,"0");return`${w}:${g}:${S}`}function o(n){return"0x"+Math.round(n*255).toString(16)}function l(n){return parseFloat((parseFloat(parseInt(n,16).toString())/255).toFixed(2))}function r(n){if(n){const i=n.split("/");return i[i.length-1]}else return""}function c(n){if(n){const i=Math.floor(n/60),f=Math.round(n-i*60);return`${String(i).padStart(2,"0")}:${String(f).padStart(2,"0")} min`}else return""}function h(n){return new Date(n*1e3).toISOString().substring(11,19)}function a(n){const i=["avi","flv","m2v","m4v","mkv","mov","mp4","mpeg","mpg","mts","mxf","ts","vob","ogv","webm","wmv"],f=["aac","aiff","flac","m4a","mp2","mp3","ogg","opus","wav","wma"],d=["apng","avif","bmp","exr","gif","jpeg","jpg","png","psd","tga","tif","tiff","webp"],g=n.split(".").pop();if(g){if(i.includes(g))return"video";if(f.includes(g))return"audio";if(d.includes(g))return"image"}return null}return{formatLog:t,timeToSeconds:e,secToHMS:s,numberToHex:o,hexToNumber:l,filename:r,toMin:c,secondsToTime:h,mediaType:a}},D=()=>{function t(){return String(Date.now().toString(32)+Math.random().toString(16)).replace(/\./g,"")}function e(s,o,l,r){s||(s=0);let c=s;const h=[];for(const a of l){if(a.uid||(a.uid=t()),a.begin=c,a.audio||delete a.audio,a.category||delete a.category,a.custom_filter||delete a.custom_filter,c+(a.out-a.in)>o+s&&(a.class="overLength",r&&(a.out=o+s-c)),r&&c>=o+s)break;h.push(a),c+=a.out-a.in}return h}return{processPlaylist:e,genUID:t}},U=C("index",{state:()=>({showAlert:!1,alertVariant:"alert-success",alertMsg:""}),getters:{},actions:{resetAlert(){this.showAlert=!1,this.alertVariant="alert-success",this.alertMsg=""}}}),{timeToSeconds:y}=v(),u=x(),p=U(),P=C("config",{state:()=>({configID:0,configCount:0,configGui:[],configGuiRaw:[],startInSec:0,playlistLength:86400,configPlayout:{},currentUser:"",configUser:{},utcOffset:0}),getters:{},actions:{updateConfigID(t){this.configID=t},updateConfigCount(t){this.configCount=t},updateGuiConfig(t){this.configGui=t},updateGuiConfigRaw(t){this.configGuiRaw=t},updateStartTime(t){this.startInSec=t},updatePlaylistLength(t){this.playlistLength=t},updatePlayoutConfig(t){this.configPlayout=t},setCurrentUser(t){this.currentUser=t},updateUserConfig(t){this.configUser=t},updateUtcOffset(t){this.utcOffset=t},async nuxtClientInit(){u.inspectToken(),u.isLogin&&(await this.getGuiConfig(),await this.getPlayoutConfig(),await this.getUserConfig())},async getGuiConfig(){let t=0;await fetch("/api/channels",{method:"GET",headers:u.authHeader}).then(e=>(t=e.status,e)).then(e=>e.json()).then(e=>{this.updateUtcOffset(e[0].utc_offset),this.updateGuiConfig(e),this.updateGuiConfigRaw(m.cloneDeep(e)),this.updateConfigCount(e.length)}).catch(e=>{if(t===401){const s=G("token");s.value=null,u.isLogin=!1,T("/")}this.updateGuiConfig([{id:1,config_path:"",extra_extensions:"",name:"Channel 1",preview_url:"",service:"",uts_offset:0}]),p.alertMsg=e,p.alertVariant="alert-danger",p.showAlert=!0})},async setGuiConfig(t){const e=m.cloneDeep(t),s={"content-type":"application/json;charset=UTF-8"};let o;if(this.configGuiRaw.some(l=>l.id===e.id))o=await fetch(`/api/channel/${t.id}`,{method:"PATCH",headers:{...s,...u.authHeader},body:JSON.stringify(e)});else{o=await fetch("/api/channel/",{method:"POST",headers:{...s,...u.authHeader},body:JSON.stringify(e)});const l=await o.json(),r=[];for(const c of this.configGui)c.name===e.name?r.push(l):r.push(c);this.updateGuiConfig(r),this.updateGuiConfigRaw(m.cloneDeep(r)),this.updateConfigCount(r.length),await this.getPlayoutConfig()}return o},async getPlayoutConfig(){const t=this.configGui[this.configID].id;await fetch(`/api/playout/config/${t}`,{method:"GET",headers:u.authHeader}).then(e=>e.json()).then(e=>{if(e.playlist.day_start){const s=y(e.playlist.day_start);this.updateStartTime(s)}if(e.playlist.length){const s=y(e.playlist.length);this.updatePlaylistLength(s)}this.updatePlayoutConfig(e)}).catch(()=>{p.alertMsg="No playout config found!",p.alertVariant="alert-danger",p.showAlert=!0})},async setPlayoutConfig(t){const e=this.configGui[this.configID].id,s={"content-type":"application/json;charset=UTF-8"};return await fetch(`/api/playout/config/${e}`,{method:"PUT",headers:{...s,...u.authHeader},body:JSON.stringify(t)})},async getUserConfig(){await fetch("/api/user",{method:"GET",headers:u.authHeader}).then(t=>t.json()).then(t=>{this.setCurrentUser(t.username),this.updateUserConfig(t)})},async setUserConfig(t){const e={"content-type":"application/json;charset=UTF-8"};return await fetch(`/api/user/${t.id}`,{method:"PUT",headers:{...e,...u.authHeader},body:JSON.stringify(t)})}}});export{U as a,D as p,v as s,P as u};
